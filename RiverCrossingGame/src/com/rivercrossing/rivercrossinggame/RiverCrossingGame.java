package com.rivercrossing.rivercrossinggame;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import java.util.Scanner;

@SuppressWarnings("serial")
public class RiverCrossingGame extends javax.swing.JFrame {
    
    static RiverCrossingGame riverCrossingGame;
    
    // Player
    Farmer player;
    // Animal and Cabbage
    Wolf wolf;
    Goat goat;
    Cabbage cabbage;
    // Boat
    Boat boat;
    
    // Player Name
    String strPlayerName = "";
    
    // Result Item
    private final ArrayList<Item> listItem = new ArrayList<>();
    
    static Scanner reader;
    /**
     * Creates new form RiverCrossingGame
     */
    public RiverCrossingGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldState = new javax.swing.JTextField();
        jButtonClearAll = new javax.swing.JButton();
        jButtonRest = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jLabelPlayer = new javax.swing.JLabel();
        jTextFieldPlayer = new javax.swing.JTextField();
        j = new javax.swing.JLabel();
        jLabelWolf_north = new javax.swing.JLabel();
        jLabelGoat_north = new javax.swing.JLabel();
        jLabelCabbage_north = new javax.swing.JLabel();
        jLabelFarmer_south = new javax.swing.JLabel();
        jLabelFarmer_north = new javax.swing.JLabel();
        jLabelWolf_south = new javax.swing.JLabel();
        jLabelGoat_south = new javax.swing.JLabel();
        jLabelCabbage_south = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButtonYourself = new javax.swing.JRadioButton();
        jRadioButtonWithCabbage = new javax.swing.JRadioButton();
        jRadioButtonWithGoat = new javax.swing.JRadioButton();
        jRadioButtonWithWolf = new javax.swing.JRadioButton();
        jButtonRow = new javax.swing.JButton();
        listH = new java.awt.List();
        jLabelBoat_south = new javax.swing.JLabel();
        jLabelBoat_north = new javax.swing.JLabel();
        jLabelTree2 = new javax.swing.JLabel();
        jLabelTree1 = new javax.swing.JLabel();
        jLabelFarmer_1north = new javax.swing.JLabel();
        jLabelWolf_1north = new javax.swing.JLabel();
        jLabelGoat_1north = new javax.swing.JLabel();
        jLabelCabbage_1north = new javax.swing.JLabel();
        jLabelBoat_1north = new javax.swing.JLabel();
        jLabelFarmer_1south = new javax.swing.JLabel();
        jLabelWolf_1south = new javax.swing.JLabel();
        jLabelGoat_1south = new javax.swing.JLabel();
        jLabelCabbage_1south = new javax.swing.JLabel();
        jLabelBoat_1south = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldStateActionPerformed(evt);
            }
        });

        jButtonClearAll.setText("Clear All");
        jButtonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearAllActionPerformed(evt);
            }
        });

        jButtonRest.setText("Reset");
        jButtonRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestActionPerformed(evt);
            }
        });

        jLabelStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelStatus.setText("Status");
        jLabelStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelPlayer.setFont(new java.awt.Font("Narkisim", 0, 14)); // NOI18N
        jLabelPlayer.setText("Player");

        jTextFieldPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPlayerActionPerformed(evt);
            }
        });

        j.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/waterPortrait.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("You must not the cabbage with the goat or the goat with the wolf");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("You can");

        jRadioButtonYourself.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButtonYourself.setText("Row across by yourself");
        jRadioButtonYourself.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonYourselfActionPerformed(evt);
            }
        });

        jRadioButtonWithCabbage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButtonWithCabbage.setText("Take the cabbage with you");
        jRadioButtonWithCabbage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonWithCabbageActionPerformed(evt);
            }
        });

        jRadioButtonWithGoat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButtonWithGoat.setText("Take the Goat with you");
        jRadioButtonWithGoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonWithGoatActionPerformed(evt);
            }
        });

        jRadioButtonWithWolf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButtonWithWolf.setText("Take the Wolf with you");
        jRadioButtonWithWolf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonWithWolfActionPerformed(evt);
            }
        });

        jButtonRow.setText("Row");
        jButtonRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jRadioButtonWithCabbage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(jRadioButtonWithGoat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonWithWolf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonYourself, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButtonRow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(17, Short.MAX_VALUE)
                        .addComponent(jRadioButtonYourself)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonWithCabbage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonWithGoat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonWithWolf)
                        .addGap(18, 18, 18)))
                .addComponent(jButtonRow, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabelFarmer_1north.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/farmer_small.png"))); // NOI18N
        jLabelFarmer_1north.setText("Farmer");

        jLabelWolf_1north.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/wolf_small.png"))); // NOI18N
        jLabelWolf_1north.setText("Wolf");

        jLabelGoat_1north.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/goat_small.png"))); // NOI18N
        jLabelGoat_1north.setText("Goat");

        jLabelCabbage_1north.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/cabbage_small.png"))); // NOI18N
        jLabelCabbage_1north.setText("Cabbage");

        jLabelBoat_1north.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/boat_small.png"))); // NOI18N
        jLabelBoat_1north.setText("Boat");

        jLabelFarmer_1south.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/farmer_small_south.png"))); // NOI18N
        jLabelFarmer_1south.setText("Farmer");

        jLabelWolf_1south.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/wolf_small_south.png"))); // NOI18N
        jLabelWolf_1south.setText("Wolf");

        jLabelGoat_1south.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/goat_small_south.png"))); // NOI18N
        jLabelGoat_1south.setText("Goat");

        jLabelCabbage_1south.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/cabbage_small_south.png"))); // NOI18N
        jLabelCabbage_1south.setText("Cabbage");

        jLabelBoat_1south.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/rivercrossing/rivercrossinggame/boat_small_south.png"))); // NOI18N
        jLabelBoat_1south.setText("Boat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163)
                        .addComponent(jLabelPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jTextFieldPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jTextFieldState, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabelFarmer_1north)
                                .addGap(86, 86, 86)
                                .addComponent(jLabelWolf_1north)
                                .addGap(81, 81, 81)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelGoat_1north)
                                    .addComponent(jLabelBoat_1north))
                                .addGap(95, 95, 95)
                                .addComponent(jLabelCabbage_1north)))
                        .addGap(19, 19, 19)
                        .addComponent(jLabelWolf_north)
                        .addGap(103, 103, 103)
                        .addComponent(jLabelGoat_north))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(listH, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(865, 865, 865)
                                .addComponent(jLabelBoat_north))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(420, 420, 420)
                                .addComponent(jLabelBoat_1south))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jLabelFarmer_1south)
                                .addGap(80, 80, 80)
                                .addComponent(jLabelWolf_1south)
                                .addGap(94, 94, 94)
                                .addComponent(jLabelGoat_1south)
                                .addGap(104, 104, 104)
                                .addComponent(jLabelCabbage_1south)
                                .addGap(76, 76, 76)
                                .addComponent(jLabelFarmer_south))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jButtonRest, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(616, 616, 616)
                                .addComponent(jButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56)
                        .addComponent(jLabelGoat_south)
                        .addGap(101, 101, 101)
                        .addComponent(jLabelCabbage_south)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTree2))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabelStatus))
                            .addComponent(jTextFieldState, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFarmer_1north)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabelWolf_1north))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabelGoat_1north)
                                .addGap(11, 11, 11)
                                .addComponent(jLabelBoat_1north))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabelCabbage_1north))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelWolf_north)
                            .addComponent(jLabelGoat_north))))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listH, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabelBoat_north)))
                        .addGap(13, 13, 13)
                        .addComponent(jLabelBoat_1south)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFarmer_1south)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabelWolf_1south))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabelGoat_1south))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabelCabbage_1south))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabelFarmer_south)))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonRest, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jLabelGoat_south))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jLabelCabbage_south))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabelTree2))))
        );

        j.getAccessibleContext().setAccessibleParent(jButtonClearAll);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1241, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // River Row
    private void jButtonRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRowActionPerformed
        // TODO add your handling code here:

        boolean bYourself = jRadioButtonYourself.isSelected();
        boolean bWithCabbage = jRadioButtonWithCabbage.isSelected();
        boolean bWithGoat = jRadioButtonWithGoat.isSelected();
        boolean bWithWolf = jRadioButtonWithWolf.isSelected();

        if(!bYourself && !bWithCabbage && !bWithGoat && !bWithWolf) {
            JOptionPane.showMessageDialog(this, "Please select the way to row the river.");
        }
        else {
            if(bYourself) {
                riverCrossingGame.rowFarmer();
                riverCrossingGame.rowBoat();
                riverCrossingGame.checkBank();
            }
            if(bWithCabbage) {
                if((boat.isIsNorth() && cabbage.isIsNorth()) || (!boat.isIsNorth() && !cabbage.isIsNorth()))
                {
                    riverCrossingGame.rowFarmer();
                    riverCrossingGame.rowBoat();
                    riverCrossingGame.rowCabbage();
                    riverCrossingGame.checkBank();
                }
                else {
                    jTextFieldState.setText("The movement is impossible because cabbage and boat are in differnet place.");
                }
            }
            if(bWithGoat) {
                if((boat.isIsNorth() && goat.isIsNorth()) || (!boat.isIsNorth() && !goat.isIsNorth()))
                {
                    riverCrossingGame.rowFarmer();
                    riverCrossingGame.rowBoat();
                    riverCrossingGame.rowGoat();
                    riverCrossingGame.checkBank();
                }
                else {
                    jTextFieldState.setText("The movement is impossible because goat and boat are in differnet place.");
                }

            }
            if(bWithWolf) {
                if((boat.isIsNorth() && wolf.isIsNorth()) || (!boat.isIsNorth() && !wolf.isIsNorth()))
                {
                    riverCrossingGame.rowFarmer();
                    riverCrossingGame.rowBoat();
                    riverCrossingGame.rowWolf();
                    riverCrossingGame.checkBank();
                }
                else {
                    jTextFieldState.setText("The movement is impossible because wolf and boat are in differnet place.");
                }
            }

            riverCrossingGame.checkSafety();
        }
    }//GEN-LAST:event_jButtonRowActionPerformed

    private void jRadioButtonWithWolfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonWithWolfActionPerformed
        // TODO add your handling code here:
        riverCrossingGame.checkRadioButtons(3);
    }//GEN-LAST:event_jRadioButtonWithWolfActionPerformed

    private void jRadioButtonWithGoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonWithGoatActionPerformed
        // TODO add your handling code here:
        riverCrossingGame.checkRadioButtons(2);
    }//GEN-LAST:event_jRadioButtonWithGoatActionPerformed

    private void jRadioButtonWithCabbageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonWithCabbageActionPerformed
        // TODO add your handling code here:
        riverCrossingGame.checkRadioButtons(1);
    }//GEN-LAST:event_jRadioButtonWithCabbageActionPerformed

    private void jRadioButtonYourselfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonYourselfActionPerformed
        // TODO add your handling code here:
        riverCrossingGame.checkRadioButtons(0);
    }//GEN-LAST:event_jRadioButtonYourselfActionPerformed

    private void jTextFieldPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPlayerActionPerformed
        // TODO add your handling code here:
        System.out.println(jTextFieldPlayer.getText());

        strPlayerName = jTextFieldPlayer.getText();

        if(!"".equals(strPlayerName)) {
            riverCrossingGame.initConfigure(strPlayerName); // init configure
        }
    }//GEN-LAST:event_jTextFieldPlayerActionPerformed

    private void jButtonRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestActionPerformed
        // TODO add your handling code here:
        int nLength = listItem.size();
        if(nLength > 0)
        {
            listItem.remove(nLength - 1);

            nLength -= 1;

            listH.removeAll();

            for(int i = 0; i < nLength; i++)
            {
                String strNorthBank = "North Bank: ";
                String strSouthBank = "South Bank: ";

                if(listItem.get(i).isIsBoatInNorth()) strNorthBank += "Boat, ";
                else strSouthBank += "Boat, ";

                if(listItem.get(i).isIsCabbageInNorth()) strNorthBank += "Cabbage, ";
                else strSouthBank += "Cabbage, ";

                if(listItem.get(i).isIsGoatInNorth()) strNorthBank += "Goat, ";
                else strSouthBank += "Goat, ";

                if(listItem.get(i).isIsWolfInNorth()) strNorthBank += "Wolf, ";
                else strSouthBank += "Wolf, ";

                listH.add(strNorthBank);
                listH.add(strSouthBank);
                listH.add(" ");
            }

            if(nLength > 0)
            {
                jLabelBoat_1north.setVisible(listItem.get(nLength - 1).isIsBoatInNorth());
                jLabelCabbage_1north.setVisible(listItem.get(nLength - 1).isIsCabbageInNorth());
                jLabelFarmer_1north.setVisible(listItem.get(nLength - 1).isIsBoatInNorth());
                jLabelGoat_1north.setVisible(listItem.get(nLength - 1).isIsGoatInNorth());
                jLabelWolf_1north.setVisible(listItem.get(nLength - 1).isIsWolfInNorth());

                jLabelBoat_1south.setVisible(!listItem.get(nLength - 1).isIsBoatInNorth());
                jLabelCabbage_1south.setVisible(!listItem.get(nLength - 1).isIsCabbageInNorth());
                jLabelFarmer_1south.setVisible(!listItem.get(nLength - 1).isIsBoatInNorth());
                jLabelGoat_1south.setVisible(!listItem.get(nLength - 1).isIsGoatInNorth());
                jLabelWolf_1south.setVisible(!listItem.get(nLength - 1).isIsWolfInNorth());

                player.setIsNorth(listItem.get(nLength - 1).isIsBoatInNorth());
                boat.setIsNorth(listItem.get(nLength - 1).isIsBoatInNorth());
                cabbage.setIsNorth(listItem.get(nLength - 1).isIsCabbageInNorth());
                goat.setIsNorth(listItem.get(nLength - 1).isIsGoatInNorth());
                wolf.setIsNorth(listItem.get(nLength - 1).isIsWolfInNorth());
            }
            else {
                riverCrossingGame.initView();
                riverCrossingGame.initConfigure("");
            }
        }
        else {
            jButtonRest.setEnabled(false);
        }
    }//GEN-LAST:event_jButtonRestActionPerformed

    private void jButtonClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearAllActionPerformed
        // TODO add your handling code here:
        riverCrossingGame.initView();
        riverCrossingGame.initConfigure("");
    }//GEN-LAST:event_jButtonClearAllActionPerformed

    private void jTextFieldStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldStateActionPerformed

    private void rowFarmer() {
       player.setIsNorth(!player.isIsNorth());
    }
    private void rowWolf() {
        wolf.setIsNorth(!wolf.isIsNorth());
    }
    private void rowGoat() {
        goat.setIsNorth(!goat.isIsNorth());
    }
    private void rowCabbage() {
        cabbage.setIsNorth(!cabbage.isIsNorth());
    }
    private void rowBoat() {
        boat.setIsNorth(!boat.isIsNorth());
    }
    
    private void checkSafety(){
        
        int nLength = listItem.size();
        
        if(nLength >= 1)
        {
            if(listItem.get(nLength - 1).isIsBoatInNorth()) {
                if(!listItem.get(nLength - 1).isIsCabbageInNorth() && !listItem.get(nLength - 1).isIsGoatInNorth())
                {
                    JOptionPane.showMessageDialog(this, "Game Over! The goat eat your cabbage.");
                    jTextFieldState.setText("Game Over! The goat eat your cabbage.");
                    
                    // TODO add your handling code here:
                    riverCrossingGame.initView();
                    riverCrossingGame.initConfigure("");
                    
                    nLength = 0;
                    
                }
                else if(!listItem.get(nLength - 1).isIsWolfInNorth() && !listItem.get(nLength - 1).isIsGoatInNorth())
                {
                    JOptionPane.showMessageDialog(this, "Game Over! The wolf skilled your goat.");
                    jTextFieldState.setText("Game Over! The wolf skilled your goat.");
                    
                    riverCrossingGame.initView();
                    riverCrossingGame.initConfigure("");
                    
                    nLength = 0;
                    
                }
                
            }
            else {
                if(listItem.get(nLength - 1).isIsCabbageInNorth() && listItem.get(nLength - 1).isIsGoatInNorth())
                {
                    JOptionPane.showMessageDialog(this, "Game Over! The goat eat your cabbage.");
                    jTextFieldState.setText("Game Over! The goat eat your cabbage.");
                    
                    riverCrossingGame.initView();
                    riverCrossingGame.initConfigure("");
                    nLength = 0;
                }else if(listItem.get(nLength - 1).isIsWolfInNorth() && listItem.get(nLength - 1).isIsGoatInNorth())
                {
                    JOptionPane.showMessageDialog(this, "Game Over! The wolf skilled your goat.");
                    jTextFieldState.setText("Game Over! The wolf skilled your goat.");
                    
                    riverCrossingGame.initView();
                    riverCrossingGame.initConfigure("");
                    
                    nLength = 0;
                }
            }
            
            if(nLength > 0 && listItem.get(nLength - 1).isIsBoatInNorth() && listItem.get(nLength - 1).isIsCabbageInNorth() && listItem.get(nLength - 1).isIsGoatInNorth() &&
                     listItem.get(nLength - 1).isIsWolfInNorth())
            {
                JOptionPane.showMessageDialog(this, "Congratulation! The Game Winner");
                jTextFieldState.setText("Congratulation! The Game Winner");
            }
        }
        
    }
    
    private void checkBank() {
        
        
        jTextFieldState.setText("");
        
        listItem.add(new Item(boat.isIsNorth(), cabbage.isIsNorth(), goat.isIsNorth(), wolf.isIsNorth()));
        
        listH.removeAll();
        
        int nLength = listItem.size();
        
        for(int i = 0; i < nLength; i++)
        {
            String strNorthBank = "North Bank: ";
            String strSouthBank = "South Bank: ";

            if(listItem.get(i).isIsBoatInNorth()) strNorthBank += "Boat, ";
            else strSouthBank += "Boat, ";

            if(listItem.get(i).isIsCabbageInNorth()) strNorthBank += "Cabbage, ";
            else strSouthBank += "Cabbage, ";

            if(listItem.get(i).isIsGoatInNorth()) strNorthBank += "Goat, ";
            else strSouthBank += "Goat, ";

            if(listItem.get(i).isIsWolfInNorth()) strNorthBank += "Wolf, ";
            else strSouthBank += "Wolf, ";

            listH.add(strNorthBank);
            listH.add(strSouthBank);
            listH.add(" ");
        }
        
        if(nLength > 0)
        {
            jLabelBoat_1north.setVisible(listItem.get(nLength - 1).isIsBoatInNorth());
            jLabelCabbage_1north.setVisible(listItem.get(nLength - 1).isIsCabbageInNorth());
            jLabelFarmer_1north.setVisible(listItem.get(nLength - 1).isIsBoatInNorth());
            jLabelGoat_1north.setVisible(listItem.get(nLength - 1).isIsGoatInNorth());
            jLabelWolf_1north.setVisible(listItem.get(nLength - 1).isIsWolfInNorth());


            jLabelBoat_1south.setVisible(!listItem.get(nLength - 1).isIsBoatInNorth());
            jLabelCabbage_1south.setVisible(!listItem.get(nLength - 1).isIsCabbageInNorth());
            jLabelFarmer_1south.setVisible(!listItem.get(nLength - 1).isIsBoatInNorth());
            jLabelGoat_1south.setVisible(!listItem.get(nLength - 1).isIsGoatInNorth());
            jLabelWolf_1south.setVisible(!listItem.get(nLength - 1).isIsWolfInNorth());
        }
    }
    private void checkRadioButtons(int index){
        JRadioButton[] _jRadioButton = {jRadioButtonYourself, jRadioButtonWithCabbage, jRadioButtonWithGoat, jRadioButtonWithWolf};
        for(int i = 0; i < _jRadioButton.length; i++)
        {
            if(i != index)
                _jRadioButton[i].setSelected(false);
            else
                _jRadioButton[i].setSelected(true);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RiverCrossingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RiverCrossingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RiverCrossingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RiverCrossingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        riverCrossingGame =  new RiverCrossingGame();
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                riverCrossingGame.setVisible(true);
                
                riverCrossingGame.setResizable(false);
                riverCrossingGame.setTitle("River Crossing Game");
                
                riverCrossingGame.initView();
            }
        });
    }
    
    private void initConfigure(String playerName) {
       player = new Farmer(playerName, false);
       wolf = new Wolf(false, 100);
       goat = new Goat(false,10);
       cabbage = new Cabbage(false);
       boat = new Boat(false);
       
       jButtonClearAll.setEnabled(true);
       jButtonRest.setEnabled(true);
       jButtonRow.setEnabled(true);
       
       listH.removeAll();
       listItem.clear();
       
    }
    
    private void initView() {
        jLabelBoat_1north.setVisible(false);
        jLabelCabbage_1north.setVisible(false);
        jLabelFarmer_1north.setVisible(false);
        jLabelGoat_1north.setVisible(false);
        jLabelWolf_1north.setVisible(false);
        
        
        jLabelBoat_1south.setVisible(true);
        jLabelCabbage_1south.setVisible(true);
        jLabelFarmer_1south.setVisible(true);
        jLabelGoat_1south.setVisible(true);
        jLabelWolf_1south.setVisible(true);
        
        jButtonClearAll.setEnabled(false);
        jButtonRest.setEnabled(false);
        jButtonRow.setEnabled(false);
        
        riverCrossingGame.checkRadioButtons(-1);
        
        jTextFieldState.setText("");
        
        listH.removeAll();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel j;
    private javax.swing.JButton jButtonClearAll;
    private javax.swing.JButton jButtonRest;
    private javax.swing.JButton jButtonRow;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBoat_1north;
    private javax.swing.JLabel jLabelBoat_1south;
    private javax.swing.JLabel jLabelBoat_north;
    private javax.swing.JLabel jLabelBoat_south;
    private javax.swing.JLabel jLabelCabbage_1north;
    private javax.swing.JLabel jLabelCabbage_1south;
    private javax.swing.JLabel jLabelCabbage_north;
    private javax.swing.JLabel jLabelCabbage_south;
    private javax.swing.JLabel jLabelFarmer_1north;
    private javax.swing.JLabel jLabelFarmer_1south;
    private javax.swing.JLabel jLabelFarmer_north;
    private javax.swing.JLabel jLabelFarmer_south;
    private javax.swing.JLabel jLabelGoat_1north;
    private javax.swing.JLabel jLabelGoat_1south;
    private javax.swing.JLabel jLabelGoat_north;
    private javax.swing.JLabel jLabelGoat_south;
    private javax.swing.JLabel jLabelPlayer;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelTree1;
    private javax.swing.JLabel jLabelTree2;
    private javax.swing.JLabel jLabelWolf_1north;
    private javax.swing.JLabel jLabelWolf_1south;
    private javax.swing.JLabel jLabelWolf_north;
    private javax.swing.JLabel jLabelWolf_south;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonWithCabbage;
    private javax.swing.JRadioButton jRadioButtonWithGoat;
    private javax.swing.JRadioButton jRadioButtonWithWolf;
    private javax.swing.JRadioButton jRadioButtonYourself;
    private javax.swing.JTextField jTextFieldPlayer;
    private javax.swing.JTextField jTextFieldState;
    private java.awt.List listH;
    // End of variables declaration//GEN-END:variables
}





/*
********************************************************
*********************** Classes ************************
********************************************************
*/

/*
***************** Farmer class ******************
*/
class Farmer {
    
    private String name;
    private boolean canDrive = true;
    private boolean isNorth = false;

    public Farmer() {
    }
    
    public Farmer(String name) {
        this.name = name;
    }

    public Farmer(String name, boolean isNorth) {
        this.name = name;
        this.isNorth = isNorth;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public boolean isCanDrive() {
        return canDrive;
    }

    public void setCanDrive(boolean canDrive) {
        this.canDrive = canDrive;
    }

    public boolean isIsNorth() {
        return isNorth;
    }

    public void setIsNorth(boolean isNorth) {
        this.isNorth = isNorth;
    }
    
}

/*
***************** Boat class ******************
*/
class Boat {

    private int maxCapacity = 2;
    private boolean isNorth;
    
    public Boat() {
    }

    public Boat(int maxCapacity) {
        this.maxCapacity = maxCapacity;
    }

    public Boat(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public boolean isIsNorth() {
        return isNorth;
    }

    public void setIsNorth(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public int getMaxCapacity() {
        return maxCapacity;
    }

    public void setMaxCapacity(int maxCapacity) {
        this.maxCapacity = maxCapacity;
    }
    
}

/*
***************** Wolf class ******************
*/
class Wolf{
    
    private boolean isNorth;// = false;
    private int nOrder;// = 100;

    public Wolf() {
    }

    public Wolf(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public Wolf(boolean isNorth, int nOrder) {
        this.isNorth = isNorth;
        this.nOrder = nOrder;
    }

    public boolean isIsNorth() {
        return isNorth;
    }

    public void setIsNorth(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public int getnOrder() {
        return nOrder;
    }

    public void setnOrder(int nOrder) {
        this.nOrder = nOrder;
    }

}

/*
***************** Goat class ******************
*/
class Goat {

    private boolean isNorth;// = false;
    private int nOrder;// = 10;
    
    public Goat() {
    }

    public Goat(boolean isNorth, int nOrder) {
        this.isNorth = isNorth;
        this.nOrder = nOrder;
    }

    public boolean isIsNorth() {
        return isNorth;
    }

    public void setIsNorth(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public int getnOrder() {
        return nOrder;
    }

    public void setnOrder(int nOrder) {
        this.nOrder = nOrder;
    }
    
}

/*
***************** Cabbage class ******************
*/
class Cabbage {
    
    private boolean isNorth = false;
    private int nOrder = 1;

    public Cabbage() {
    }

    public Cabbage(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public boolean isIsNorth() {
        return isNorth;
    }

    public void setIsNorth(boolean isNorth) {
        this.isNorth = isNorth;
    }

    public int getnOrder() {
        return nOrder;
    }

    public void setnOrder(int nOrder) {
        this.nOrder = nOrder;
    }
    
}

// Item
class Item {
    private boolean isBoatInNorth = false;
    private boolean isCabbageInNorth = false;
    private boolean isGoatInNorth = false;
    private boolean isWolfInNorth = false;
    public Item() {
    }
    public Item(boolean isBoatInNorth, boolean isCabbageInNorth, boolean isGoatInNorth, boolean isWolfInNorth) {
        this.isBoatInNorth = isBoatInNorth;
        this.isCabbageInNorth = isCabbageInNorth;
        this.isGoatInNorth = isGoatInNorth;
        this.isWolfInNorth = isWolfInNorth;
    }
    public boolean isIsBoatInNorth() {
        return isBoatInNorth;
    }
    public void setIsBoatInNorth(boolean isBoatInNorth) {
        this.isBoatInNorth = isBoatInNorth;
    }
    public boolean isIsCabbageInNorth() {
        return isCabbageInNorth;
    }
    public void setIsCabbageInNorth(boolean isCabbageInNorth) {
        this.isCabbageInNorth = isCabbageInNorth;
    }
    public boolean isIsGoatInNorth() {
        return isGoatInNorth;
    }
    public void setIsGoatInNorth(boolean isGoatInNorth) {
        this.isGoatInNorth = isGoatInNorth;
    }
    public boolean isIsWolfInNorth() {
        return isWolfInNorth;
    }
    public void setIsWolfInNorth(boolean isWolfInNorth) {
        this.isWolfInNorth = isWolfInNorth;
    }
}